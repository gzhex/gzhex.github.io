<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>02 MySQL进阶</title>
      <link href="/2022/08/22/MySQL02-%E8%BF%9B%E9%98%B6/"/>
      <url>/2022/08/22/MySQL02-%E8%BF%9B%E9%98%B6/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><pre data-enlighter-language="bash">$ hexo new "My New Post"</pre>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01 MySQL基础</title>
      <link href="/2022/08/21/MySQL01-%E5%9F%BA%E7%A1%80/"/>
      <url>/2022/08/21/MySQL01-%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><pre data-enlighter-language="bash">$ hexo new "My New Post"</pre>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>06 异常</title>
      <link href="/2022/08/21/Java06-%E5%BC%82%E5%B8%B8/"/>
      <url>/2022/08/21/Java06-%E5%BC%82%E5%B8%B8/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><pre data-enlighter-language="bash">$ hexo new "My New Post"</pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>05 面向对象</title>
      <link href="/2022/08/21/Java05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
      <url>/2022/08/21/Java05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><pre data-enlighter-language="bash">$ hexo new "My New Post"</pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>04 Java数组</title>
      <link href="/2022/08/21/Java04-%E6%95%B0%E7%BB%84/"/>
      <url>/2022/08/21/Java04-%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><pre data-enlighter-language="bash">$ hexo new "My New Post"</pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>03 Java方法</title>
      <link href="/2022/08/21/Java03-%E6%96%B9%E6%B3%95/"/>
      <url>/2022/08/21/Java03-%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><pre data-enlighter-language="bash">$ hexo new "My New Post"</pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>02 Java流程控制</title>
      <link href="/2022/08/21/Java02-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
      <url>/2022/08/21/Java02-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="用户交互Scanner"><a href="#用户交互Scanner" class="headerlink" title="用户交互Scanner"></a>用户交互Scanner</h1><p><strong>凡是属于IO流的类如果不关闭会一直占用资源！！！</strong></p><p><em><strong>java.util.Scanner</strong></em></p><ol><li><p>通过Scanner类获取用户的输入；</p></li><li><p>通过next()与nextline()方法获取输入的字符串；</p></li><li><p>通过hasNext()与hasNextLine()判断是否还有输入的数据。</p></li></ol><p><em><strong>next():</strong></em></p><ol><li><p>一定要读取到有效字符后才可以结束输入；</p></li><li><p>对输入有效字符之前遇到的空白，next()方法会自动将其去掉；</p></li><li><p>只有输入有效字符后才将其后面输入的空白作为分隔符或者结束符；</p></li><li><p>next()不能得到带有空格的字符串。</p></li></ol><p><em><strong>nextLine():</strong></em></p><ol><li><p>以Enter为结束符，nextLine()方法返回的是输入回车之前的所有字符；</p></li><li><p>可以获得空白。</p></li></ol><pre data-enlighter-language="java">Scanner scanner = new Scanner(System.in);if (scanner.hasNext()){    String str = scanner.next();    System.out.println("输出的内容为："+str);}scanner.close();</pre><pre data-enlighter-language="java">Scanner scanner = new Scanner(System.in);System.out.println("请输入数据：");String str = scanner.nextLine();System.out.println("输出的内容为："+str);scanner.close();</pre><pre data-enlighter-language="java">nextInt();//hasNextInt();nextFloat();//hasNextFloat();nextDouble();//hasNextDouble();</pre><hr><h1 id="顺序结构"><a href="#顺序结构" class="headerlink" title="顺序结构"></a>顺序结构</h1><h1 id="选择结构"><a href="#选择结构" class="headerlink" title="选择结构"></a>选择结构</h1><p><em><strong>if选择结构：</strong></em></p><ol><li><font size="4">if单选择</font></li></ol><pre data-enlighter-language="java">Scanner scanner = new Scanner(System.in);System.out.println("请输入内容：");String s = scanner.nextLine();if (s.equals("Hello")){   System.out.println(s);}System.out.println("End");scanner.close();</pre><ol start="2"><li><font size="4">if双选择</font></li></ol><pre data-enlighter-language="java">Scanner scanner = new Scanner(System.in);System.out.println("请输入成绩：");int score = scanner.nextInt();if (score>=60){   System.out.println("及格");}else{    System.out.println("不及格");}scanner.close();</pre><ol start="3"><li><font size="4">if多选择</font></li></ol><pre data-enlighter-language="java">Scanner scanner = new Scanner(System.in);System.out.println()int score = scanner.nextInt();if (score==100){    System.out.println("恭喜满分");}else if(score<100 && score>=90){    System.out.println("A级");}else if(score<90 && score>=80){    System.out.println("B级");}else if(score<80 && score>=70){    System.out.println("C级");}else if(score<70 && score>=60){    System.out.println("D级");}else if(score<60 && score>=0){    System.out.println("不及格");}else{    System.out.println("成绩不合法");}scanner.close();</pre><ol start="4"><li><font size="4">嵌套if</font></li></ol><p><em><strong>switch选择结构：</strong></em></p><p>&ensp;&emsp;case穿透：未遇到break语句之前，所有语句顺序执行。</p><p>&ensp;&emsp;switch匹配：一个具体的值。</p><hr><h1 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h1><p><em><strong>while循环结构：</strong></em></p><pre data-enlighter-language="java">int i = 0;int sum = 0;while(i<=100){    sum += i;    i++;}System.out.println(sum);</pre><p><em><strong>do…while循环结构：</strong></em></p><pre data-enlighter-language="java">int i = 0;int sum = 0;do{    sum += i;    i++;}while(i<=100)System.out.println(sum);</pre><p><em><strong>for循环结构：</strong></em></p><pre data-enlighter-language="java">int sum = 0;for(int i=1;i<=100;i++){    sum += i;}System.out.println(sum);</pre><pre data-enlighter-language="java">//增强for循环int[] numbers = {10,20,30,40,50};for(int i=0;i<5;i++){    System.out.println(numbers[x]);}for(int x:numbers){    System.out.println(x);}</pre><hr><h1 id="break-amp-continue"><a href="#break-amp-continue" class="headerlink" title="break &amp; continue"></a>break &amp; continue</h1><p>&ensp;&emsp;<strong>break强制结束循环</strong>，不执行循环中剩余的语句。</p><p>&ensp;&emsp;<strong>continue终止本次循环</strong>，跳过剩余语句，进入下一次循环的判定。</p><hr><h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><p><em><strong>九九乘法表：</strong></em></p><pre data-enlighter-language="java">public class Jiu{    public static void main(String[] args){        for(int i=1;i<=9;i++){            for(int j=1;j<=i;j++){                System.out.print(j+"*"+i+"="+(j*i)+"\t");            }            System.out.println();        }    }}</pre><p><em><strong>三角形：</strong></em></p><pre data-enlighter-language="java">public class San{    public static void main(String[] args){        for(int i=1;i<=5;i++){            for(int j=5;j>=i;j--){                System.out.print(" ");            }            for(int j=1;j<=i;j++){                System.out.print("*");            }            for(int j=1;j<i;j++){                System.out.print("*");            }            System.out.println();        }    }}</pre><hr>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01 Java基础</title>
      <link href="/2022/08/21/Java01-%E5%9F%BA%E7%A1%80/"/>
      <url>/2022/08/21/Java01-%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="包机制"><a href="#包机制" class="headerlink" title="包机制"></a>包机制</h1><pre data-enlighter-language="java">package package1[. package2[. package3...]];import package1[.package2...].(classname|*);</pre><h1 id="JavaDoc帮助文档"><a href="#JavaDoc帮助文档" class="headerlink" title="JavaDoc帮助文档"></a>JavaDoc帮助文档</h1><pre data-enlighter-language="java">/**  *@author 作者名  *@version 版本号  *@since 指明需要最早使用的idk版本  *@param 参数名  *@return 返回值情况  *@throws 异常抛出情况*/</pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
